//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace eClass.DataBaseService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DatabaseSoap", Namespace="http://police.gov/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarshalByRefObject))]
    public partial class Database : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExecuteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteQueryOndbOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteQueryWithDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectFieldValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectDateFieldValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectBlobFieldValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTableDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFieldValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDateFieldValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveClobFieldValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTableDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback setActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSequenceValueOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Database() {
            this.Url = global::eClass.Properties.Settings.Default.eClass_DataBaseService_Database;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExecuteQueryCompletedEventHandler ExecuteQueryCompleted;
        
        /// <remarks/>
        public event ExecuteQueryOndbCompletedEventHandler ExecuteQueryOndbCompleted;
        
        /// <remarks/>
        public event ExecuteQueryWithDateCompletedEventHandler ExecuteQueryWithDateCompleted;
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event ExecuteNonQueryStrCompletedEventHandler ExecuteNonQueryStrCompleted;
        
        /// <remarks/>
        public event SelectFieldValueCompletedEventHandler SelectFieldValueCompleted;
        
        /// <remarks/>
        public event SelectDateFieldValueCompletedEventHandler SelectDateFieldValueCompleted;
        
        /// <remarks/>
        public event SelectBlobFieldValueCompletedEventHandler SelectBlobFieldValueCompleted;
        
        /// <remarks/>
        public event SaveTableDataCompletedEventHandler SaveTableDataCompleted;
        
        /// <remarks/>
        public event SaveFieldValueCompletedEventHandler SaveFieldValueCompleted;
        
        /// <remarks/>
        public event SaveDateFieldValueCompletedEventHandler SaveDateFieldValueCompleted;
        
        /// <remarks/>
        public event SaveClobFieldValueCompletedEventHandler SaveClobFieldValueCompleted;
        
        /// <remarks/>
        public event DeleteTableDataCompletedEventHandler DeleteTableDataCompleted;
        
        /// <remarks/>
        public event CallFunctionCompletedEventHandler CallFunctionCompleted;
        
        /// <remarks/>
        public event setActiveCompletedEventHandler setActiveCompleted;
        
        /// <remarks/>
        public event getSequenceValueCompletedEventHandler getSequenceValueCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/ExecuteQuery", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteQuery(string pCommandText) {
            object[] results = this.Invoke("ExecuteQuery", new object[] {
                        pCommandText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string pCommandText) {
            this.ExecuteQueryAsync(pCommandText, null);
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string pCommandText, object userState) {
            if ((this.ExecuteQueryOperationCompleted == null)) {
                this.ExecuteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteQuery", new object[] {
                        pCommandText}, this.ExecuteQueryOperationCompleted, userState);
        }
        
        private void OnExecuteQueryOperationCompleted(object arg) {
            if ((this.ExecuteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteQueryCompleted(this, new ExecuteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/ExecuteQueryOndb", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteQueryOndb(string pCommandText) {
            object[] results = this.Invoke("ExecuteQueryOndb", new object[] {
                        pCommandText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteQueryOndbAsync(string pCommandText) {
            this.ExecuteQueryOndbAsync(pCommandText, null);
        }
        
        /// <remarks/>
        public void ExecuteQueryOndbAsync(string pCommandText, object userState) {
            if ((this.ExecuteQueryOndbOperationCompleted == null)) {
                this.ExecuteQueryOndbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteQueryOndbOperationCompleted);
            }
            this.InvokeAsync("ExecuteQueryOndb", new object[] {
                        pCommandText}, this.ExecuteQueryOndbOperationCompleted, userState);
        }
        
        private void OnExecuteQueryOndbOperationCompleted(object arg) {
            if ((this.ExecuteQueryOndbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteQueryOndbCompleted(this, new ExecuteQueryOndbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/ExecuteQueryWithDate", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteQueryWithDate(string pCommandText, string Deploy_ID, string CreatedUser, string[] parameters) {
            object[] results = this.Invoke("ExecuteQueryWithDate", new object[] {
                        pCommandText,
                        Deploy_ID,
                        CreatedUser,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteQueryWithDateAsync(string pCommandText, string Deploy_ID, string CreatedUser, string[] parameters) {
            this.ExecuteQueryWithDateAsync(pCommandText, Deploy_ID, CreatedUser, parameters, null);
        }
        
        /// <remarks/>
        public void ExecuteQueryWithDateAsync(string pCommandText, string Deploy_ID, string CreatedUser, string[] parameters, object userState) {
            if ((this.ExecuteQueryWithDateOperationCompleted == null)) {
                this.ExecuteQueryWithDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteQueryWithDateOperationCompleted);
            }
            this.InvokeAsync("ExecuteQueryWithDate", new object[] {
                        pCommandText,
                        Deploy_ID,
                        CreatedUser,
                        parameters}, this.ExecuteQueryWithDateOperationCompleted, userState);
        }
        
        private void OnExecuteQueryWithDateOperationCompleted(object arg) {
            if ((this.ExecuteQueryWithDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteQueryWithDateCompleted(this, new ExecuteQueryWithDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/ExecuteNonQuery", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteNonQuery(string[] SqlList) {
            object[] results = this.Invoke("ExecuteNonQuery", new object[] {
                        SqlList});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string[] SqlList) {
            this.ExecuteNonQueryAsync(SqlList, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string[] SqlList, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        SqlList}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new ExecuteNonQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/ExecuteNonQueryStr", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteNonQueryStr(string Sql) {
            object[] results = this.Invoke("ExecuteNonQueryStr", new object[] {
                        Sql});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQueryStrAsync(string Sql) {
            this.ExecuteNonQueryStrAsync(Sql, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryStrAsync(string Sql, object userState) {
            if ((this.ExecuteNonQueryStrOperationCompleted == null)) {
                this.ExecuteNonQueryStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryStrOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQueryStr", new object[] {
                        Sql}, this.ExecuteNonQueryStrOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryStrOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryStrCompleted(this, new ExecuteNonQueryStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/SelectFieldValue", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectFieldValue(string TableName, string FieldName, string WhereStr) {
            object[] results = this.Invoke("SelectFieldValue", new object[] {
                        TableName,
                        FieldName,
                        WhereStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectFieldValueAsync(string TableName, string FieldName, string WhereStr) {
            this.SelectFieldValueAsync(TableName, FieldName, WhereStr, null);
        }
        
        /// <remarks/>
        public void SelectFieldValueAsync(string TableName, string FieldName, string WhereStr, object userState) {
            if ((this.SelectFieldValueOperationCompleted == null)) {
                this.SelectFieldValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectFieldValueOperationCompleted);
            }
            this.InvokeAsync("SelectFieldValue", new object[] {
                        TableName,
                        FieldName,
                        WhereStr}, this.SelectFieldValueOperationCompleted, userState);
        }
        
        private void OnSelectFieldValueOperationCompleted(object arg) {
            if ((this.SelectFieldValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectFieldValueCompleted(this, new SelectFieldValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/SelectDateFieldValue", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime SelectDateFieldValue(string TableName, string FieldName, string WhereStr) {
            object[] results = this.Invoke("SelectDateFieldValue", new object[] {
                        TableName,
                        FieldName,
                        WhereStr});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void SelectDateFieldValueAsync(string TableName, string FieldName, string WhereStr) {
            this.SelectDateFieldValueAsync(TableName, FieldName, WhereStr, null);
        }
        
        /// <remarks/>
        public void SelectDateFieldValueAsync(string TableName, string FieldName, string WhereStr, object userState) {
            if ((this.SelectDateFieldValueOperationCompleted == null)) {
                this.SelectDateFieldValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectDateFieldValueOperationCompleted);
            }
            this.InvokeAsync("SelectDateFieldValue", new object[] {
                        TableName,
                        FieldName,
                        WhereStr}, this.SelectDateFieldValueOperationCompleted, userState);
        }
        
        private void OnSelectDateFieldValueOperationCompleted(object arg) {
            if ((this.SelectDateFieldValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectDateFieldValueCompleted(this, new SelectDateFieldValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/SelectBlobFieldValue", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Image SelectBlobFieldValue(string TableName, string FieldName, string whereStr) {
            object[] results = this.Invoke("SelectBlobFieldValue", new object[] {
                        TableName,
                        FieldName,
                        whereStr});
            return ((Image)(results[0]));
        }
        
        /// <remarks/>
        public void SelectBlobFieldValueAsync(string TableName, string FieldName, string whereStr) {
            this.SelectBlobFieldValueAsync(TableName, FieldName, whereStr, null);
        }
        
        /// <remarks/>
        public void SelectBlobFieldValueAsync(string TableName, string FieldName, string whereStr, object userState) {
            if ((this.SelectBlobFieldValueOperationCompleted == null)) {
                this.SelectBlobFieldValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectBlobFieldValueOperationCompleted);
            }
            this.InvokeAsync("SelectBlobFieldValue", new object[] {
                        TableName,
                        FieldName,
                        whereStr}, this.SelectBlobFieldValueOperationCompleted, userState);
        }
        
        private void OnSelectBlobFieldValueOperationCompleted(object arg) {
            if ((this.SelectBlobFieldValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectBlobFieldValueCompleted(this, new SelectBlobFieldValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/SaveTableData", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveTableData(string TableName, string KeyFieldName, ref string KeyFieldValue, string SequenceName, string UserName, string[] Fields) {
            object[] results = this.Invoke("SaveTableData", new object[] {
                        TableName,
                        KeyFieldName,
                        KeyFieldValue,
                        SequenceName,
                        UserName,
                        Fields});
            KeyFieldValue = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTableDataAsync(string TableName, string KeyFieldName, string KeyFieldValue, string SequenceName, string UserName, string[] Fields) {
            this.SaveTableDataAsync(TableName, KeyFieldName, KeyFieldValue, SequenceName, UserName, Fields, null);
        }
        
        /// <remarks/>
        public void SaveTableDataAsync(string TableName, string KeyFieldName, string KeyFieldValue, string SequenceName, string UserName, string[] Fields, object userState) {
            if ((this.SaveTableDataOperationCompleted == null)) {
                this.SaveTableDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTableDataOperationCompleted);
            }
            this.InvokeAsync("SaveTableData", new object[] {
                        TableName,
                        KeyFieldName,
                        KeyFieldValue,
                        SequenceName,
                        UserName,
                        Fields}, this.SaveTableDataOperationCompleted, userState);
        }
        
        private void OnSaveTableDataOperationCompleted(object arg) {
            if ((this.SaveTableDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTableDataCompleted(this, new SaveTableDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/SaveFieldValue", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveFieldValue(string TableName, string FieldName, string FieldValue, string KeyFieldName, ref string KeyFieldValue, string SequenceName, string UserName) {
            object[] results = this.Invoke("SaveFieldValue", new object[] {
                        TableName,
                        FieldName,
                        FieldValue,
                        KeyFieldName,
                        KeyFieldValue,
                        SequenceName,
                        UserName});
            KeyFieldValue = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFieldValueAsync(string TableName, string FieldName, string FieldValue, string KeyFieldName, string KeyFieldValue, string SequenceName, string UserName) {
            this.SaveFieldValueAsync(TableName, FieldName, FieldValue, KeyFieldName, KeyFieldValue, SequenceName, UserName, null);
        }
        
        /// <remarks/>
        public void SaveFieldValueAsync(string TableName, string FieldName, string FieldValue, string KeyFieldName, string KeyFieldValue, string SequenceName, string UserName, object userState) {
            if ((this.SaveFieldValueOperationCompleted == null)) {
                this.SaveFieldValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFieldValueOperationCompleted);
            }
            this.InvokeAsync("SaveFieldValue", new object[] {
                        TableName,
                        FieldName,
                        FieldValue,
                        KeyFieldName,
                        KeyFieldValue,
                        SequenceName,
                        UserName}, this.SaveFieldValueOperationCompleted, userState);
        }
        
        private void OnSaveFieldValueOperationCompleted(object arg) {
            if ((this.SaveFieldValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFieldValueCompleted(this, new SaveFieldValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/SaveDateFieldValue", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveDateFieldValue(string TableName, string FieldName, string FieldValue, string KeyFieldName, ref string KeyFieldValue, string SequenceName, string DateFormat, string UserName) {
            object[] results = this.Invoke("SaveDateFieldValue", new object[] {
                        TableName,
                        FieldName,
                        FieldValue,
                        KeyFieldName,
                        KeyFieldValue,
                        SequenceName,
                        DateFormat,
                        UserName});
            KeyFieldValue = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDateFieldValueAsync(string TableName, string FieldName, string FieldValue, string KeyFieldName, string KeyFieldValue, string SequenceName, string DateFormat, string UserName) {
            this.SaveDateFieldValueAsync(TableName, FieldName, FieldValue, KeyFieldName, KeyFieldValue, SequenceName, DateFormat, UserName, null);
        }
        
        /// <remarks/>
        public void SaveDateFieldValueAsync(string TableName, string FieldName, string FieldValue, string KeyFieldName, string KeyFieldValue, string SequenceName, string DateFormat, string UserName, object userState) {
            if ((this.SaveDateFieldValueOperationCompleted == null)) {
                this.SaveDateFieldValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDateFieldValueOperationCompleted);
            }
            this.InvokeAsync("SaveDateFieldValue", new object[] {
                        TableName,
                        FieldName,
                        FieldValue,
                        KeyFieldName,
                        KeyFieldValue,
                        SequenceName,
                        DateFormat,
                        UserName}, this.SaveDateFieldValueOperationCompleted, userState);
        }
        
        private void OnSaveDateFieldValueOperationCompleted(object arg) {
            if ((this.SaveDateFieldValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDateFieldValueCompleted(this, new SaveDateFieldValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/SaveClobFieldValue", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveClobFieldValue(string pCommandText, string parameter, string inData) {
            object[] results = this.Invoke("SaveClobFieldValue", new object[] {
                        pCommandText,
                        parameter,
                        inData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveClobFieldValueAsync(string pCommandText, string parameter, string inData) {
            this.SaveClobFieldValueAsync(pCommandText, parameter, inData, null);
        }
        
        /// <remarks/>
        public void SaveClobFieldValueAsync(string pCommandText, string parameter, string inData, object userState) {
            if ((this.SaveClobFieldValueOperationCompleted == null)) {
                this.SaveClobFieldValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveClobFieldValueOperationCompleted);
            }
            this.InvokeAsync("SaveClobFieldValue", new object[] {
                        pCommandText,
                        parameter,
                        inData}, this.SaveClobFieldValueOperationCompleted, userState);
        }
        
        private void OnSaveClobFieldValueOperationCompleted(object arg) {
            if ((this.SaveClobFieldValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveClobFieldValueCompleted(this, new SaveClobFieldValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/DeleteTableData", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteTableData(string TableName, string WhereStr, string UserName) {
            object[] results = this.Invoke("DeleteTableData", new object[] {
                        TableName,
                        WhereStr,
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTableDataAsync(string TableName, string WhereStr, string UserName) {
            this.DeleteTableDataAsync(TableName, WhereStr, UserName, null);
        }
        
        /// <remarks/>
        public void DeleteTableDataAsync(string TableName, string WhereStr, string UserName, object userState) {
            if ((this.DeleteTableDataOperationCompleted == null)) {
                this.DeleteTableDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTableDataOperationCompleted);
            }
            this.InvokeAsync("DeleteTableData", new object[] {
                        TableName,
                        WhereStr,
                        UserName}, this.DeleteTableDataOperationCompleted, userState);
        }
        
        private void OnDeleteTableDataOperationCompleted(object arg) {
            if ((this.DeleteTableDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTableDataCompleted(this, new DeleteTableDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/CallFunction", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CallFunction(string FunctionName) {
            object[] results = this.Invoke("CallFunction", new object[] {
                        FunctionName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallFunctionAsync(string FunctionName) {
            this.CallFunctionAsync(FunctionName, null);
        }
        
        /// <remarks/>
        public void CallFunctionAsync(string FunctionName, object userState) {
            if ((this.CallFunctionOperationCompleted == null)) {
                this.CallFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallFunctionOperationCompleted);
            }
            this.InvokeAsync("CallFunction", new object[] {
                        FunctionName}, this.CallFunctionOperationCompleted, userState);
        }
        
        private void OnCallFunctionOperationCompleted(object arg) {
            if ((this.CallFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallFunctionCompleted(this, new CallFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/setActive", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setActive(string Table_ID, string Table_Name, string Active, bool Restore, string UserName) {
            this.Invoke("setActive", new object[] {
                        Table_ID,
                        Table_Name,
                        Active,
                        Restore,
                        UserName});
        }
        
        /// <remarks/>
        public void setActiveAsync(string Table_ID, string Table_Name, string Active, bool Restore, string UserName) {
            this.setActiveAsync(Table_ID, Table_Name, Active, Restore, UserName, null);
        }
        
        /// <remarks/>
        public void setActiveAsync(string Table_ID, string Table_Name, string Active, bool Restore, string UserName, object userState) {
            if ((this.setActiveOperationCompleted == null)) {
                this.setActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetActiveOperationCompleted);
            }
            this.InvokeAsync("setActive", new object[] {
                        Table_ID,
                        Table_Name,
                        Active,
                        Restore,
                        UserName}, this.setActiveOperationCompleted, userState);
        }
        
        private void OnsetActiveOperationCompleted(object arg) {
            if ((this.setActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setActiveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/getSequenceValue", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSequenceValue(string SequenceName, string Old_ID) {
            object[] results = this.Invoke("getSequenceValue", new object[] {
                        SequenceName,
                        Old_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSequenceValueAsync(string SequenceName, string Old_ID) {
            this.getSequenceValueAsync(SequenceName, Old_ID, null);
        }
        
        /// <remarks/>
        public void getSequenceValueAsync(string SequenceName, string Old_ID, object userState) {
            if ((this.getSequenceValueOperationCompleted == null)) {
                this.getSequenceValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSequenceValueOperationCompleted);
            }
            this.InvokeAsync("getSequenceValue", new object[] {
                        SequenceName,
                        Old_ID}, this.getSequenceValueOperationCompleted, userState);
        }
        
        private void OngetSequenceValueOperationCompleted(object arg) {
            if ((this.getSequenceValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSequenceValueCompleted(this, new getSequenceValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://police.gov/")]
    public abstract partial class Image : MarshalByRefObject {
        
        private object tagField;
        
        private ColorPalette paletteField;
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public ColorPalette Palette {
            get {
                return this.paletteField;
            }
            set {
                this.paletteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://police.gov/")]
    public partial class ColorPalette {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Image))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://police.gov/")]
    public abstract partial class MarshalByRefObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteQueryCompletedEventHandler(object sender, ExecuteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteQueryOndbCompletedEventHandler(object sender, ExecuteQueryOndbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteQueryOndbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteQueryOndbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteQueryWithDateCompletedEventHandler(object sender, ExecuteQueryWithDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteQueryWithDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteQueryWithDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, ExecuteNonQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteNonQueryStrCompletedEventHandler(object sender, ExecuteNonQueryStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQueryStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQueryStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectFieldValueCompletedEventHandler(object sender, SelectFieldValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectDateFieldValueCompletedEventHandler(object sender, SelectDateFieldValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectDateFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectDateFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectBlobFieldValueCompletedEventHandler(object sender, SelectBlobFieldValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectBlobFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectBlobFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Image Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Image)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveTableDataCompletedEventHandler(object sender, SaveTableDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTableDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTableDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string KeyFieldValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveFieldValueCompletedEventHandler(object sender, SaveFieldValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string KeyFieldValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveDateFieldValueCompletedEventHandler(object sender, SaveDateFieldValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDateFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDateFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string KeyFieldValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveClobFieldValueCompletedEventHandler(object sender, SaveClobFieldValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveClobFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveClobFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteTableDataCompletedEventHandler(object sender, DeleteTableDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTableDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTableDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CallFunctionCompletedEventHandler(object sender, CallFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setActiveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getSequenceValueCompletedEventHandler(object sender, getSequenceValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSequenceValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSequenceValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591