//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace eClass.SecurityService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SecuritySoap", Namespace="http://police.gov/")]
    public partial class Security : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback whereSqlAllPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback whereSqlWithPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback accessFrameSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkFormWithPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkFormWithAccessFrameOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkFormWithAccessFramePermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkRowWithPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkRowWithActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkBnoWithActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback MD5OperationCompleted;
        
        private System.Threading.SendOrPostCallback checkUserSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkUserSystemTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkUserSystemTypeSystemIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback setErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Security() {
            this.Url = global::eClass.Properties.Settings.Default.eClass_SecurityService_Security;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event whereSqlAllPermissionCompletedEventHandler whereSqlAllPermissionCompleted;
        
        /// <remarks/>
        public event whereSqlWithPermissionsCompletedEventHandler whereSqlWithPermissionsCompleted;
        
        /// <remarks/>
        public event accessFrameSqlCompletedEventHandler accessFrameSqlCompleted;
        
        /// <remarks/>
        public event checkFormCompletedEventHandler checkFormCompleted;
        
        /// <remarks/>
        public event checkFormWithPermissionsCompletedEventHandler checkFormWithPermissionsCompleted;
        
        /// <remarks/>
        public event checkFormWithAccessFrameCompletedEventHandler checkFormWithAccessFrameCompleted;
        
        /// <remarks/>
        public event checkFormWithAccessFramePermissionsCompletedEventHandler checkFormWithAccessFramePermissionsCompleted;
        
        /// <remarks/>
        public event checkRowWithPermissionsCompletedEventHandler checkRowWithPermissionsCompleted;
        
        /// <remarks/>
        public event checkRowWithActionCompletedEventHandler checkRowWithActionCompleted;
        
        /// <remarks/>
        public event checkBnoWithActionCompletedEventHandler checkBnoWithActionCompleted;
        
        /// <remarks/>
        public event checkSystemCompletedEventHandler checkSystemCompleted;
        
        /// <remarks/>
        public event MD5CompletedEventHandler MD5Completed;
        
        /// <remarks/>
        public event checkUserSystemCompletedEventHandler checkUserSystemCompleted;
        
        /// <remarks/>
        public event checkUserSystemTypeCompletedEventHandler checkUserSystemTypeCompleted;
        
        /// <remarks/>
        public event checkUserSystemTypeSystemIDCompletedEventHandler checkUserSystemTypeSystemIDCompleted;
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        public event setErrorCompletedEventHandler setErrorCompleted;
        
        /// <remarks/>
        public event ReadErrorCompletedEventHandler ReadErrorCompleted;
        
        /// <remarks/>
        public event setLogCompletedEventHandler setLogCompleted;
        
        /// <remarks/>
        public event ReadLogCompletedEventHandler ReadLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/whereSqlAllPermission", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string whereSqlAllPermission(string formName, UserInfo userInfo) {
            object[] results = this.Invoke("whereSqlAllPermission", new object[] {
                        formName,
                        userInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void whereSqlAllPermissionAsync(string formName, UserInfo userInfo) {
            this.whereSqlAllPermissionAsync(formName, userInfo, null);
        }
        
        /// <remarks/>
        public void whereSqlAllPermissionAsync(string formName, UserInfo userInfo, object userState) {
            if ((this.whereSqlAllPermissionOperationCompleted == null)) {
                this.whereSqlAllPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwhereSqlAllPermissionOperationCompleted);
            }
            this.InvokeAsync("whereSqlAllPermission", new object[] {
                        formName,
                        userInfo}, this.whereSqlAllPermissionOperationCompleted, userState);
        }
        
        private void OnwhereSqlAllPermissionOperationCompleted(object arg) {
            if ((this.whereSqlAllPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.whereSqlAllPermissionCompleted(this, new whereSqlAllPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/whereSqlWithPermissions", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string whereSqlWithPermissions(string formName, UserInfo userInfo, string[] permissions, string archiveOractive) {
            object[] results = this.Invoke("whereSqlWithPermissions", new object[] {
                        formName,
                        userInfo,
                        permissions,
                        archiveOractive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void whereSqlWithPermissionsAsync(string formName, UserInfo userInfo, string[] permissions, string archiveOractive) {
            this.whereSqlWithPermissionsAsync(formName, userInfo, permissions, archiveOractive, null);
        }
        
        /// <remarks/>
        public void whereSqlWithPermissionsAsync(string formName, UserInfo userInfo, string[] permissions, string archiveOractive, object userState) {
            if ((this.whereSqlWithPermissionsOperationCompleted == null)) {
                this.whereSqlWithPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwhereSqlWithPermissionsOperationCompleted);
            }
            this.InvokeAsync("whereSqlWithPermissions", new object[] {
                        formName,
                        userInfo,
                        permissions,
                        archiveOractive}, this.whereSqlWithPermissionsOperationCompleted, userState);
        }
        
        private void OnwhereSqlWithPermissionsOperationCompleted(object arg) {
            if ((this.whereSqlWithPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.whereSqlWithPermissionsCompleted(this, new whereSqlWithPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/accessFrameSql", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string accessFrameSql(string accessFrame, UserInfo userInfo) {
            object[] results = this.Invoke("accessFrameSql", new object[] {
                        accessFrame,
                        userInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void accessFrameSqlAsync(string accessFrame, UserInfo userInfo) {
            this.accessFrameSqlAsync(accessFrame, userInfo, null);
        }
        
        /// <remarks/>
        public void accessFrameSqlAsync(string accessFrame, UserInfo userInfo, object userState) {
            if ((this.accessFrameSqlOperationCompleted == null)) {
                this.accessFrameSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccessFrameSqlOperationCompleted);
            }
            this.InvokeAsync("accessFrameSql", new object[] {
                        accessFrame,
                        userInfo}, this.accessFrameSqlOperationCompleted, userState);
        }
        
        private void OnaccessFrameSqlOperationCompleted(object arg) {
            if ((this.accessFrameSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accessFrameSqlCompleted(this, new accessFrameSqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkForm", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkForm(string formName, UserInfo userInfo) {
            object[] results = this.Invoke("checkForm", new object[] {
                        formName,
                        userInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkFormAsync(string formName, UserInfo userInfo) {
            this.checkFormAsync(formName, userInfo, null);
        }
        
        /// <remarks/>
        public void checkFormAsync(string formName, UserInfo userInfo, object userState) {
            if ((this.checkFormOperationCompleted == null)) {
                this.checkFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckFormOperationCompleted);
            }
            this.InvokeAsync("checkForm", new object[] {
                        formName,
                        userInfo}, this.checkFormOperationCompleted, userState);
        }
        
        private void OncheckFormOperationCompleted(object arg) {
            if ((this.checkFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkFormCompleted(this, new checkFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkFormWithPermissions", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkFormWithPermissions(string formName, UserInfo userInfo, string[] permissions) {
            object[] results = this.Invoke("checkFormWithPermissions", new object[] {
                        formName,
                        userInfo,
                        permissions});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkFormWithPermissionsAsync(string formName, UserInfo userInfo, string[] permissions) {
            this.checkFormWithPermissionsAsync(formName, userInfo, permissions, null);
        }
        
        /// <remarks/>
        public void checkFormWithPermissionsAsync(string formName, UserInfo userInfo, string[] permissions, object userState) {
            if ((this.checkFormWithPermissionsOperationCompleted == null)) {
                this.checkFormWithPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckFormWithPermissionsOperationCompleted);
            }
            this.InvokeAsync("checkFormWithPermissions", new object[] {
                        formName,
                        userInfo,
                        permissions}, this.checkFormWithPermissionsOperationCompleted, userState);
        }
        
        private void OncheckFormWithPermissionsOperationCompleted(object arg) {
            if ((this.checkFormWithPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkFormWithPermissionsCompleted(this, new checkFormWithPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkFormWithAccessFrame", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkFormWithAccessFrame(string formName, UserInfo userInfo, string accessFrame) {
            object[] results = this.Invoke("checkFormWithAccessFrame", new object[] {
                        formName,
                        userInfo,
                        accessFrame});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkFormWithAccessFrameAsync(string formName, UserInfo userInfo, string accessFrame) {
            this.checkFormWithAccessFrameAsync(formName, userInfo, accessFrame, null);
        }
        
        /// <remarks/>
        public void checkFormWithAccessFrameAsync(string formName, UserInfo userInfo, string accessFrame, object userState) {
            if ((this.checkFormWithAccessFrameOperationCompleted == null)) {
                this.checkFormWithAccessFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckFormWithAccessFrameOperationCompleted);
            }
            this.InvokeAsync("checkFormWithAccessFrame", new object[] {
                        formName,
                        userInfo,
                        accessFrame}, this.checkFormWithAccessFrameOperationCompleted, userState);
        }
        
        private void OncheckFormWithAccessFrameOperationCompleted(object arg) {
            if ((this.checkFormWithAccessFrameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkFormWithAccessFrameCompleted(this, new checkFormWithAccessFrameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkFormWithAccessFramePermissions", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkFormWithAccessFramePermissions(string formName, string accessFrame, UserInfo userInfo, string[] permissions) {
            object[] results = this.Invoke("checkFormWithAccessFramePermissions", new object[] {
                        formName,
                        accessFrame,
                        userInfo,
                        permissions});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkFormWithAccessFramePermissionsAsync(string formName, string accessFrame, UserInfo userInfo, string[] permissions) {
            this.checkFormWithAccessFramePermissionsAsync(formName, accessFrame, userInfo, permissions, null);
        }
        
        /// <remarks/>
        public void checkFormWithAccessFramePermissionsAsync(string formName, string accessFrame, UserInfo userInfo, string[] permissions, object userState) {
            if ((this.checkFormWithAccessFramePermissionsOperationCompleted == null)) {
                this.checkFormWithAccessFramePermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckFormWithAccessFramePermissionsOperationCompleted);
            }
            this.InvokeAsync("checkFormWithAccessFramePermissions", new object[] {
                        formName,
                        accessFrame,
                        userInfo,
                        permissions}, this.checkFormWithAccessFramePermissionsOperationCompleted, userState);
        }
        
        private void OncheckFormWithAccessFramePermissionsOperationCompleted(object arg) {
            if ((this.checkFormWithAccessFramePermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkFormWithAccessFramePermissionsCompleted(this, new checkFormWithAccessFramePermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkRowWithPermissions", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkRowWithPermissions(string pBNoHistory_ID, string formName, UserInfo userInfo, string[] permissions) {
            object[] results = this.Invoke("checkRowWithPermissions", new object[] {
                        pBNoHistory_ID,
                        formName,
                        userInfo,
                        permissions});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkRowWithPermissionsAsync(string pBNoHistory_ID, string formName, UserInfo userInfo, string[] permissions) {
            this.checkRowWithPermissionsAsync(pBNoHistory_ID, formName, userInfo, permissions, null);
        }
        
        /// <remarks/>
        public void checkRowWithPermissionsAsync(string pBNoHistory_ID, string formName, UserInfo userInfo, string[] permissions, object userState) {
            if ((this.checkRowWithPermissionsOperationCompleted == null)) {
                this.checkRowWithPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckRowWithPermissionsOperationCompleted);
            }
            this.InvokeAsync("checkRowWithPermissions", new object[] {
                        pBNoHistory_ID,
                        formName,
                        userInfo,
                        permissions}, this.checkRowWithPermissionsOperationCompleted, userState);
        }
        
        private void OncheckRowWithPermissionsOperationCompleted(object arg) {
            if ((this.checkRowWithPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkRowWithPermissionsCompleted(this, new checkRowWithPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkRowWithAction", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkRowWithAction(string pBNoHistory_ID, string formName, UserInfo userInfo, ref string message, string purpose) {
            object[] results = this.Invoke("checkRowWithAction", new object[] {
                        pBNoHistory_ID,
                        formName,
                        userInfo,
                        message,
                        purpose});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkRowWithActionAsync(string pBNoHistory_ID, string formName, UserInfo userInfo, string message, string purpose) {
            this.checkRowWithActionAsync(pBNoHistory_ID, formName, userInfo, message, purpose, null);
        }
        
        /// <remarks/>
        public void checkRowWithActionAsync(string pBNoHistory_ID, string formName, UserInfo userInfo, string message, string purpose, object userState) {
            if ((this.checkRowWithActionOperationCompleted == null)) {
                this.checkRowWithActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckRowWithActionOperationCompleted);
            }
            this.InvokeAsync("checkRowWithAction", new object[] {
                        pBNoHistory_ID,
                        formName,
                        userInfo,
                        message,
                        purpose}, this.checkRowWithActionOperationCompleted, userState);
        }
        
        private void OncheckRowWithActionOperationCompleted(object arg) {
            if ((this.checkRowWithActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkRowWithActionCompleted(this, new checkRowWithActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkBnoWithAction", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkBnoWithAction(string bno, string formName, UserInfo userInfo, ref string message, string purpose) {
            object[] results = this.Invoke("checkBnoWithAction", new object[] {
                        bno,
                        formName,
                        userInfo,
                        message,
                        purpose});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkBnoWithActionAsync(string bno, string formName, UserInfo userInfo, string message, string purpose) {
            this.checkBnoWithActionAsync(bno, formName, userInfo, message, purpose, null);
        }
        
        /// <remarks/>
        public void checkBnoWithActionAsync(string bno, string formName, UserInfo userInfo, string message, string purpose, object userState) {
            if ((this.checkBnoWithActionOperationCompleted == null)) {
                this.checkBnoWithActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckBnoWithActionOperationCompleted);
            }
            this.InvokeAsync("checkBnoWithAction", new object[] {
                        bno,
                        formName,
                        userInfo,
                        message,
                        purpose}, this.checkBnoWithActionOperationCompleted, userState);
        }
        
        private void OncheckBnoWithActionOperationCompleted(object arg) {
            if ((this.checkBnoWithActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkBnoWithActionCompleted(this, new checkBnoWithActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkSystem", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkSystem(string systemName, UserInfo userInfo) {
            object[] results = this.Invoke("checkSystem", new object[] {
                        systemName,
                        userInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkSystemAsync(string systemName, UserInfo userInfo) {
            this.checkSystemAsync(systemName, userInfo, null);
        }
        
        /// <remarks/>
        public void checkSystemAsync(string systemName, UserInfo userInfo, object userState) {
            if ((this.checkSystemOperationCompleted == null)) {
                this.checkSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSystemOperationCompleted);
            }
            this.InvokeAsync("checkSystem", new object[] {
                        systemName,
                        userInfo}, this.checkSystemOperationCompleted, userState);
        }
        
        private void OncheckSystemOperationCompleted(object arg) {
            if ((this.checkSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSystemCompleted(this, new checkSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/MD5", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MD5(string password) {
            object[] results = this.Invoke("MD5", new object[] {
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MD5Async(string password) {
            this.MD5Async(password, null);
        }
        
        /// <remarks/>
        public void MD5Async(string password, object userState) {
            if ((this.MD5OperationCompleted == null)) {
                this.MD5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMD5OperationCompleted);
            }
            this.InvokeAsync("MD5", new object[] {
                        password}, this.MD5OperationCompleted, userState);
        }
        
        private void OnMD5OperationCompleted(object arg) {
            if ((this.MD5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MD5Completed(this, new MD5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkUserSystem", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkUserSystem(string UserName, string UserPassword, int SystemID) {
            object[] results = this.Invoke("checkUserSystem", new object[] {
                        UserName,
                        UserPassword,
                        SystemID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkUserSystemAsync(string UserName, string UserPassword, int SystemID) {
            this.checkUserSystemAsync(UserName, UserPassword, SystemID, null);
        }
        
        /// <remarks/>
        public void checkUserSystemAsync(string UserName, string UserPassword, int SystemID, object userState) {
            if ((this.checkUserSystemOperationCompleted == null)) {
                this.checkUserSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckUserSystemOperationCompleted);
            }
            this.InvokeAsync("checkUserSystem", new object[] {
                        UserName,
                        UserPassword,
                        SystemID}, this.checkUserSystemOperationCompleted, userState);
        }
        
        private void OncheckUserSystemOperationCompleted(object arg) {
            if ((this.checkUserSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkUserSystemCompleted(this, new checkUserSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkUserSystemType", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkUserSystemType(string UserName, string UserPassword, string SystemType) {
            object[] results = this.Invoke("checkUserSystemType", new object[] {
                        UserName,
                        UserPassword,
                        SystemType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkUserSystemTypeAsync(string UserName, string UserPassword, string SystemType) {
            this.checkUserSystemTypeAsync(UserName, UserPassword, SystemType, null);
        }
        
        /// <remarks/>
        public void checkUserSystemTypeAsync(string UserName, string UserPassword, string SystemType, object userState) {
            if ((this.checkUserSystemTypeOperationCompleted == null)) {
                this.checkUserSystemTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckUserSystemTypeOperationCompleted);
            }
            this.InvokeAsync("checkUserSystemType", new object[] {
                        UserName,
                        UserPassword,
                        SystemType}, this.checkUserSystemTypeOperationCompleted, userState);
        }
        
        private void OncheckUserSystemTypeOperationCompleted(object arg) {
            if ((this.checkUserSystemTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkUserSystemTypeCompleted(this, new checkUserSystemTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/checkUserSystemTypeSystemID", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkUserSystemTypeSystemID(string UserName, string UserPassword, string SystemType, string SystemId) {
            object[] results = this.Invoke("checkUserSystemTypeSystemID", new object[] {
                        UserName,
                        UserPassword,
                        SystemType,
                        SystemId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkUserSystemTypeSystemIDAsync(string UserName, string UserPassword, string SystemType, string SystemId) {
            this.checkUserSystemTypeSystemIDAsync(UserName, UserPassword, SystemType, SystemId, null);
        }
        
        /// <remarks/>
        public void checkUserSystemTypeSystemIDAsync(string UserName, string UserPassword, string SystemType, string SystemId, object userState) {
            if ((this.checkUserSystemTypeSystemIDOperationCompleted == null)) {
                this.checkUserSystemTypeSystemIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckUserSystemTypeSystemIDOperationCompleted);
            }
            this.InvokeAsync("checkUserSystemTypeSystemID", new object[] {
                        UserName,
                        UserPassword,
                        SystemType,
                        SystemId}, this.checkUserSystemTypeSystemIDOperationCompleted, userState);
        }
        
        private void OncheckUserSystemTypeSystemIDOperationCompleted(object arg) {
            if ((this.checkUserSystemTypeSystemIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkUserSystemTypeSystemIDCompleted(this, new checkUserSystemTypeSystemIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/getUserInfo", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo getUserInfo(string pLoginUserName, string connectedIP) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        pLoginUserName,
                        connectedIP});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string pLoginUserName, string connectedIP) {
            this.getUserInfoAsync(pLoginUserName, connectedIP, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string pLoginUserName, string connectedIP, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        pLoginUserName,
                        connectedIP}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/setError", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setError(_Exception ex, UserInfo userinfo, string Description) {
            this.Invoke("setError", new object[] {
                        ex,
                        userinfo,
                        Description});
        }
        
        /// <remarks/>
        public void setErrorAsync(_Exception ex, UserInfo userinfo, string Description) {
            this.setErrorAsync(ex, userinfo, Description, null);
        }
        
        /// <remarks/>
        public void setErrorAsync(_Exception ex, UserInfo userinfo, string Description, object userState) {
            if ((this.setErrorOperationCompleted == null)) {
                this.setErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetErrorOperationCompleted);
            }
            this.InvokeAsync("setError", new object[] {
                        ex,
                        userinfo,
                        Description}, this.setErrorOperationCompleted, userState);
        }
        
        private void OnsetErrorOperationCompleted(object arg) {
            if ((this.setErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/ReadError", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReadError() {
            object[] results = this.Invoke("ReadError", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReadErrorAsync() {
            this.ReadErrorAsync(null);
        }
        
        /// <remarks/>
        public void ReadErrorAsync(object userState) {
            if ((this.ReadErrorOperationCompleted == null)) {
                this.ReadErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadErrorOperationCompleted);
            }
            this.InvokeAsync("ReadError", new object[0], this.ReadErrorOperationCompleted, userState);
        }
        
        private void OnReadErrorOperationCompleted(object arg) {
            if ((this.ReadErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadErrorCompleted(this, new ReadErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/setLog", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLog(_Log log, UserInfo userInfo, string tableName, string tableID, string userAction, string formName) {
            this.Invoke("setLog", new object[] {
                        log,
                        userInfo,
                        tableName,
                        tableID,
                        userAction,
                        formName});
        }
        
        /// <remarks/>
        public void setLogAsync(_Log log, UserInfo userInfo, string tableName, string tableID, string userAction, string formName) {
            this.setLogAsync(log, userInfo, tableName, tableID, userAction, formName, null);
        }
        
        /// <remarks/>
        public void setLogAsync(_Log log, UserInfo userInfo, string tableName, string tableID, string userAction, string formName, object userState) {
            if ((this.setLogOperationCompleted == null)) {
                this.setLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLogOperationCompleted);
            }
            this.InvokeAsync("setLog", new object[] {
                        log,
                        userInfo,
                        tableName,
                        tableID,
                        userAction,
                        formName}, this.setLogOperationCompleted, userState);
        }
        
        private void OnsetLogOperationCompleted(object arg) {
            if ((this.setLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://police.gov/ReadLog", RequestNamespace="http://police.gov/", ResponseNamespace="http://police.gov/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReadLog() {
            object[] results = this.Invoke("ReadLog", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReadLogAsync() {
            this.ReadLogAsync(null);
        }
        
        /// <remarks/>
        public void ReadLogAsync(object userState) {
            if ((this.ReadLogOperationCompleted == null)) {
                this.ReadLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadLogOperationCompleted);
            }
            this.InvokeAsync("ReadLog", new object[0], this.ReadLogOperationCompleted, userState);
        }
        
        private void OnReadLogOperationCompleted(object arg) {
            if ((this.ReadLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadLogCompleted(this, new ReadLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://police.gov/")]
    public partial class UserInfo {
        
        private string userOfficialNameField;
        
        private string officialPositionField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string worker_IDField;
        
        private string workHistoryIDField;
        
        private string loginUserNameField;
        
        private string userIDField;
        
        private string alba_IDField;
        
        private string albaNameField;
        
        private string zone_IDField;
        
        private string agent_IDField;
        
        private string agentNameField;
        
        private string department_IDField;
        
        private string organizationCodeField;
        
        private string deptCodeField;
        
        private string deptGazar_CodeField;
        
        private string deptHeltes_CodeField;
        
        private string deptTasag_CodeField;
        
        private string deptHeseg_CodeField;
        
        private string deptFullNameField;
        
        private string gazarNameField;
        
        private string heltesNameField;
        
        private string tasagNameField;
        
        private string deptNameField;
        
        private string deptZipCodeField;
        
        private string human_IDField;
        
        private string connected_IPField;
        
        /// <remarks/>
        public string UserOfficialName {
            get {
                return this.userOfficialNameField;
            }
            set {
                this.userOfficialNameField = value;
            }
        }
        
        /// <remarks/>
        public string OfficialPosition {
            get {
                return this.officialPositionField;
            }
            set {
                this.officialPositionField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Worker_ID {
            get {
                return this.worker_IDField;
            }
            set {
                this.worker_IDField = value;
            }
        }
        
        /// <remarks/>
        public string WorkHistoryID {
            get {
                return this.workHistoryIDField;
            }
            set {
                this.workHistoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string LoginUserName {
            get {
                return this.loginUserNameField;
            }
            set {
                this.loginUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Alba_ID {
            get {
                return this.alba_IDField;
            }
            set {
                this.alba_IDField = value;
            }
        }
        
        /// <remarks/>
        public string AlbaName {
            get {
                return this.albaNameField;
            }
            set {
                this.albaNameField = value;
            }
        }
        
        /// <remarks/>
        public string Zone_ID {
            get {
                return this.zone_IDField;
            }
            set {
                this.zone_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Agent_ID {
            get {
                return this.agent_IDField;
            }
            set {
                this.agent_IDField = value;
            }
        }
        
        /// <remarks/>
        public string AgentName {
            get {
                return this.agentNameField;
            }
            set {
                this.agentNameField = value;
            }
        }
        
        /// <remarks/>
        public string Department_ID {
            get {
                return this.department_IDField;
            }
            set {
                this.department_IDField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationCode {
            get {
                return this.organizationCodeField;
            }
            set {
                this.organizationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptGazar_Code {
            get {
                return this.deptGazar_CodeField;
            }
            set {
                this.deptGazar_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptHeltes_Code {
            get {
                return this.deptHeltes_CodeField;
            }
            set {
                this.deptHeltes_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptTasag_Code {
            get {
                return this.deptTasag_CodeField;
            }
            set {
                this.deptTasag_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptHeseg_Code {
            get {
                return this.deptHeseg_CodeField;
            }
            set {
                this.deptHeseg_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeptFullName {
            get {
                return this.deptFullNameField;
            }
            set {
                this.deptFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string GazarName {
            get {
                return this.gazarNameField;
            }
            set {
                this.gazarNameField = value;
            }
        }
        
        /// <remarks/>
        public string HeltesName {
            get {
                return this.heltesNameField;
            }
            set {
                this.heltesNameField = value;
            }
        }
        
        /// <remarks/>
        public string TasagName {
            get {
                return this.tasagNameField;
            }
            set {
                this.tasagNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeptZipCode {
            get {
                return this.deptZipCodeField;
            }
            set {
                this.deptZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Human_ID {
            get {
                return this.human_IDField;
            }
            set {
                this.human_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Connected_IP {
            get {
                return this.connected_IPField;
            }
            set {
                this.connected_IPField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://police.gov/")]
    public partial class _Log {
        
        private string classNameField;
        
        private string functionNameField;
        
        /// <remarks/>
        public string className {
            get {
                return this.classNameField;
            }
            set {
                this.classNameField = value;
            }
        }
        
        /// <remarks/>
        public string functionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://police.gov/")]
    public partial class _Exception {
        
        private string classNameField;
        
        private string functionNameField;
        
        private string exceptionTargetField;
        
        private string exceptionMessageField;
        
        private string exceptionStackTraceField;
        
        /// <remarks/>
        public string className {
            get {
                return this.classNameField;
            }
            set {
                this.classNameField = value;
            }
        }
        
        /// <remarks/>
        public string functionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionTarget {
            get {
                return this.exceptionTargetField;
            }
            set {
                this.exceptionTargetField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionMessage {
            get {
                return this.exceptionMessageField;
            }
            set {
                this.exceptionMessageField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionStackTrace {
            get {
                return this.exceptionStackTraceField;
            }
            set {
                this.exceptionStackTraceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void whereSqlAllPermissionCompletedEventHandler(object sender, whereSqlAllPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class whereSqlAllPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal whereSqlAllPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void whereSqlWithPermissionsCompletedEventHandler(object sender, whereSqlWithPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class whereSqlWithPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal whereSqlWithPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void accessFrameSqlCompletedEventHandler(object sender, accessFrameSqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accessFrameSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accessFrameSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkFormCompletedEventHandler(object sender, checkFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkFormWithPermissionsCompletedEventHandler(object sender, checkFormWithPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkFormWithPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkFormWithPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkFormWithAccessFrameCompletedEventHandler(object sender, checkFormWithAccessFrameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkFormWithAccessFrameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkFormWithAccessFrameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkFormWithAccessFramePermissionsCompletedEventHandler(object sender, checkFormWithAccessFramePermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkFormWithAccessFramePermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkFormWithAccessFramePermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkRowWithPermissionsCompletedEventHandler(object sender, checkRowWithPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkRowWithPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkRowWithPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkRowWithActionCompletedEventHandler(object sender, checkRowWithActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkRowWithActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkRowWithActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkBnoWithActionCompletedEventHandler(object sender, checkBnoWithActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkBnoWithActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkBnoWithActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkSystemCompletedEventHandler(object sender, checkSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MD5CompletedEventHandler(object sender, MD5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MD5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MD5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkUserSystemCompletedEventHandler(object sender, checkUserSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkUserSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkUserSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkUserSystemTypeCompletedEventHandler(object sender, checkUserSystemTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkUserSystemTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkUserSystemTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkUserSystemTypeSystemIDCompletedEventHandler(object sender, checkUserSystemTypeSystemIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkUserSystemTypeSystemIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkUserSystemTypeSystemIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setErrorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReadErrorCompletedEventHandler(object sender, ReadErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReadLogCompletedEventHandler(object sender, ReadLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591